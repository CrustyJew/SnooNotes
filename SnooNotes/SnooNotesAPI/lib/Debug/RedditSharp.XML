<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RedditSharp</name>
    </assembly>
    <members>
        <member name="M:RedditSharp.Things.Comment.EditText(System.String)">
            <summary>
            Replaces the text in this comment with the input text.
            </summary>
            <param name="newText">The text to replace the comment's contents</param>        
        </member>
        <member name="M:RedditSharp.Things.Post.EditText(System.String)">
            <summary>
            Replaces the text in this post with the input text.
            </summary>
            <param name="newText">The text to replace the post's contents</param>
        </member>
        <member name="M:RedditSharp.Things.RedditUser.GetOverview(RedditSharp.Things.Sort,System.Int32,RedditSharp.Things.FromTime)">
            <summary>
            Get a listing of comments and posts from the user sorted by <paramref name="sorting"/>, from time <paramref name="fromTime"/>
            and limited to <paramref name="limit"/>.
            </summary>
            <param name="sorting">How to sort the comments (hot, new, top, controversial).</param>
            <param name="limit">How many comments to fetch per request. Max is 100.</param>
            <param name="fromTime">What time frame of comments to show (hour, day, week, month, year, all).</param>
            <returns>The listing of comments requested.</returns>
        </member>
        <member name="M:RedditSharp.Things.RedditUser.GetComments(RedditSharp.Things.Sort,System.Int32,RedditSharp.Things.FromTime)">
            <summary>
            Get a listing of comments from the user sorted by <paramref name="sorting"/>, from time <paramref name="fromTime"/>
            and limited to <paramref name="limit"/>.
            </summary>
            <param name="sorting">How to sort the comments (hot, new, top, controversial).</param>
            <param name="limit">How many comments to fetch per request. Max is 100.</param>
            <param name="fromTime">What time frame of comments to show (hour, day, week, month, year, all).</param>
            <returns>The listing of comments requested.</returns>
        </member>
        <member name="M:RedditSharp.Things.RedditUser.GetPosts(RedditSharp.Things.Sort,System.Int32,RedditSharp.Things.FromTime)">
            <summary>
            Get a listing of posts from the user sorted by <paramref name="sorting"/>, from time <paramref name="fromTime"/>
            and limited to <paramref name="limit"/>.
            </summary>
            <param name="sorting">How to sort the posts (hot, new, top, controversial).</param>
            <param name="limit">How many posts to fetch per request. Max is 100.</param>
            <param name="fromTime">What time frame of posts to show (hour, day, week, month, year, all).</param>
            <returns>The listing of posts requested.</returns>
        </member>
        <member name="P:RedditSharp.Things.Subreddit.UserIsModerator">
            <summary>
            Property determining whether the current logged in user is a moderator on this subreddit.
            </summary>
        </member>
        <member name="P:RedditSharp.Things.Subreddit.ModPermissions">
            <summary>
            Property giving the moderator permissions of the logged in user on this subreddit.
            </summary>
        </member>
        <member name="P:RedditSharp.Things.Subreddit.UserIsBanned">
            <summary>
            Property determining whether the current logged in user is banned from the subreddit.
            </summary>
        </member>
        <member name="M:RedditSharp.Things.Subreddit.SubmitPost(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Submits a link post in the current subreddit using the logged-in user
            </summary>
            <param name="title">The title of the submission</param>
            <param name="url">The url of the submission link</param>
        </member>
        <member name="M:RedditSharp.Things.Subreddit.SubmitTextPost(System.String,System.String,System.String,System.String)">
            <summary>
            Submits a text post in the current subreddit using the logged-in user
            </summary>
            <param name="title">The title of the submission</param>
            <param name="text">The raw markdown text of the submission</param>
        </member>
        <member name="P:RedditSharp.Things.Thing.FetchedAt">
            <summary>
            The time at which this object was fetched from reddit servers.
            </summary>
        </member>
        <member name="P:RedditSharp.Things.Thing.TimeSinceFetch">
            <summary>
            Gets the time since last fetch from reddit servers.
            </summary>
        </member>
        <member name="P:RedditSharp.Things.VotableThing.Liked">
            <summary>
            True if the logged in user has upvoted this.
            False if they have not.
            Null if they have not cast a vote.
            </summary>
        </member>
        <member name="P:RedditSharp.Things.VotableThing.Vote">
            <summary>
            Gets or sets the vote for the current VotableThing.
            </summary>
        </member>
        <member name="M:RedditSharp.AuthProvider.#ctor(System.String,System.String,System.String)">
            <summary>
            Allows use of reddit's OAuth interface, using an app set up at https://ssl.reddit.com/prefs/apps/.
            </summary>
            <param name="clientId">Granted by reddit as part of app.</param>
            <param name="clientSecret">Granted by reddit as part of app.</param>
            <param name="redirectUri">Selected as part of app. Reddit will send users back here.</param>
        </member>
        <member name="M:RedditSharp.AuthProvider.#ctor(System.String,System.String,System.String,RedditSharp.IWebAgent)">
            <summary>
            Allows use of reddit's OAuth interface, using an app set up at https://ssl.reddit.com/prefs/apps/.
            </summary>
            <param name="clientId">Granted by reddit as part of app.</param>
            <param name="clientSecret">Granted by reddit as part of app.</param>
            <param name="redirectUri">Selected as part of app. Reddit will send users back here.</param>
            <param name="agent">Implementation of IWebAgent to use to make requests.</param>
        </member>
        <member name="M:RedditSharp.AuthProvider.GetAuthUrl(System.String,RedditSharp.AuthProvider.Scope,System.Boolean)">
            <summary>
            Creates the reddit OAuth2 Url to redirect the user to for authorization. 
            </summary>
            <param name="state">Used to verify that the user received is the user that was sent</param>
            <param name="scope">Determines what actions can be performed against the user.</param>
            <param name="permanent">Set to true for access lasting longer than one hour.</param>
            <returns></returns>
        </member>
        <member name="M:RedditSharp.AuthProvider.GetOAuthToken(System.String,System.Boolean)">
            <summary>
            Gets the OAuth token for the user associated with the provided code.
            </summary>
            <param name="code">Sent by reddit as a parameter in the return uri.</param>
            <param name="isRefresh">Set to true for refresh requests.</param>
            <returns></returns>
        </member>
        <member name="M:RedditSharp.AuthProvider.GetOAuthToken(System.String,System.String)">
            <summary>
            Gets the OAuth token for the user.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The user's password.</param>
            <returns>The access token</returns>
        </member>
        <member name="M:RedditSharp.AuthProvider.GetUser(System.String)">
            <summary>
            Gets a user authenticated by OAuth2.
            </summary>
            <param name="accessToken">Obtained using GetOAuthToken</param>
            <returns></returns>
        </member>
        <member name="T:RedditSharp.DuplicateLinkException">
            <summary>
            Exception that gets thrown if you try and submit a duplicate link to a SubReddit
            </summary>
        </member>
        <member name="F:RedditSharp.Listing`1.DefaultListingPerRequest">
            <summary>
            Gets the default number of listings returned per request
            </summary>
        </member>
        <member name="M:RedditSharp.Listing`1.#ctor(RedditSharp.Reddit,System.String,RedditSharp.IWebAgent)">
            <summary>
            Creates a new Listing instance
            </summary>
            <param name="reddit"></param>
            <param name="url"></param>
            <param name="webAgent"></param>
        </member>
        <member name="M:RedditSharp.Listing`1.GetEnumerator(System.Int32,System.Int32)">
            <summary>
            Returns an enumerator that iterates through a collection, using the specified number of listings per
            request and optionally the maximum number of listings
            </summary>
            <param name="limitPerRequest">The number of listings to be returned per request</param>
            <param name="maximumLimit">The maximum number of listings to return</param>
            <returns></returns>
        </member>
        <member name="M:RedditSharp.Listing`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection, using the default number of listings per request
            </summary>
            <returns></returns>
        </member>
        <member name="M:RedditSharp.Listing`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:RedditSharp.Listing`1.GetListing(System.Int32)">
            <summary>
            Returns an IEnumerable instance which will return the specified maximum number of listings
            </summary>
            <param name="maximumLimit"></param>
            <returns></returns>
        </member>
        <member name="M:RedditSharp.Listing`1.GetListing(System.Int32,System.Int32)">
            <summary>
            Returns an IEnumerable instance which will return the specified maximum number of listings
            with the limited number per request
            </summary>
            <param name="maximumLimit"></param>
            <param name="limitPerRequest"></param>
            <returns></returns>
        </member>
        <member name="M:RedditSharp.Listing`1.GetEnumerator(System.Collections.Generic.IEnumerator{`0})">
            <summary>
            Converts an IEnumerator instance to an IEnumerable
            </summary>
            <param name="enumerator"></param>
            <returns></returns>
        </member>
        <member name="M:RedditSharp.Listing`1.ListingEnumerator`1.#ctor(RedditSharp.Listing{`1},System.Int32,System.Int32)">
            <summary>
            Creates a new ListingEnumerator instance
            </summary>
            <param name="listing"></param>
            <param name="limitPerRequest">The number of listings to be returned per request. -1 will exclude this parameter and use the Reddit default (25)</param>
            <param name="maximumLimit">The maximum number of listings to return, -1 will not add a limit</param>
        </member>
        <member name="T:RedditSharp.Reddit">
            <summary>
            Class to communicate with Reddit.com
            </summary>
        </member>
        <member name="F:RedditSharp.Reddit.CaptchaSolver">
            <summary>
            Captcha solver instance to use when solving captchas.
            </summary>
        </member>
        <member name="P:RedditSharp.Reddit.User">
            <summary>
            The authenticated user for this instance.
            </summary>
        </member>
        <member name="P:RedditSharp.Reddit.RateLimit">
            <summary>
            Sets the Rate Limiting Mode of the underlying WebAgent
            </summary>
        </member>
        <member name="P:RedditSharp.Reddit.FrontPage">
            <summary>
            Gets the FrontPage using the current Reddit instance.
            </summary>
        </member>
        <member name="P:RedditSharp.Reddit.RSlashAll">
            <summary>
            Gets /r/All using the current Reddit instance.
            </summary>
        </member>
        <member name="M:RedditSharp.Reddit.#ctor(RedditSharp.IWebAgent)">
            <summary>
            Creates a Reddit instance with the given WebAgent implementation
            </summary>
            <param name="agent">Implementation of IWebAgent interface. Used to generate requests.</param>
        </member>
        <member name="M:RedditSharp.Reddit.#ctor(RedditSharp.IWebAgent,System.Boolean)">
            <summary>
            Creates a Reddit instance with the given WebAgent implementation
            </summary>
            <param name="agent">Implementation of IWebAgent interface. Used to generate requests.</param>
            <param name="initUser">Whether to run InitOrUpdateUser, requires <paramref name="agent"/> to have credentials first.</param>
        </member>
        <member name="M:RedditSharp.Reddit.LogIn(System.String,System.String,System.Boolean)">
            <summary>
            Logs in the current Reddit instance.
            </summary>
            <param name="username">The username of the user to log on to.</param>
            <param name="password">The password of the user to log on to.</param>
            <param name="useSsl">Whether to use SSL or not. (default: true)</param>
            <returns></returns>
        </member>
        <member name="M:RedditSharp.Reddit.InitOrUpdateUser">
            <summary>
            Initializes the User property if it's null,
            otherwise replaces the existing user object
            with a new one fetched from reddit servers.
            </summary>
        </member>
        <member name="M:RedditSharp.Reddit.GetSubredditAsync(System.String)">
            <summary>
            Returns the subreddit. 
            </summary>
            <param name="name">The name of the subreddit</param>
            <returns>The Subreddit by given name</returns>
        </member>
        <member name="M:RedditSharp.Reddit.RegisterAccount(System.String,System.String,System.String)">
            <summary>
            Registers a new Reddit user
            </summary>
            <param name="userName">The username for the new account.</param>
            <param name="passwd">The password for the new account.</param>
            <param name="email">The optional recovery email for the new account.</param>
            <returns>The newly created user account</returns>
        </member>
        <member name="T:RedditSharp.RedditException">
            <summary>
            Represents an error that occurred during accessing or manipulating data on Reddit.
            </summary>
        </member>
        <member name="M:RedditSharp.RedditException.#ctor">
            <summary>
            Initializes a new instance of the RedditException class.
            </summary>
        </member>
        <member name="M:RedditSharp.RedditException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the RedditException class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:RedditSharp.RedditException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the RedditException class with a specified error message and
            a referenced inner exception that is the cause of this exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="inner">The exception that is the cause of the current exception, or a null
            reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:RedditSharp.RedditException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the RedditException class with serialized data.
            </summary>
            <param name="info">The System.Runtime.Serialization.SerializationInfo that holds the
            serialized object data about the exception being thrown.</param>
            <param name="context">The System.Runtime.Serialization.StreamingContext that contains
            contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The info parameter is null.</exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name
            is null or System.Exception.HResult is zero (0).</exception>
        </member>
        <member name="M:RedditSharp.SubredditSettings.ResetHeaderImage">
            <summary>
            Resets the subreddit's header image to the Reddit logo
            </summary>
        </member>
        <member name="P:RedditSharp.WebAgent.UserAgent">
            <summary>
            Additional values to append to the default RedditSharp user agent.
            </summary>
        </member>
        <member name="P:RedditSharp.WebAgent.EnableRateLimit">
            <summary>
            It is strongly advised that you leave this enabled. Reddit bans excessive
            requests with extreme predjudice.
            </summary>
        </member>
        <member name="P:RedditSharp.WebAgent.RateLimit">
            <summary>
            It is strongly advised that you leave this set to Burst or Pace. Reddit bans excessive
            requests with extreme predjudice.
            </summary>
        </member>
        <member name="T:RedditSharp.WebAgent.RateLimitMode">
            <summary>
            The method by which the WebAgent will limit request rate
            </summary>
        </member>
        <member name="F:RedditSharp.WebAgent.RateLimitMode.Pace">
            <summary>
            Limits requests to one every two seconds
            </summary>
        </member>
        <member name="F:RedditSharp.WebAgent.RateLimitMode.SmallBurst">
            <summary>
            Restricts requests to five per ten seconds
            </summary>
        </member>
        <member name="F:RedditSharp.WebAgent.RateLimitMode.Burst">
            <summary>
            Restricts requests to thirty per minute
            </summary>
        </member>
        <member name="F:RedditSharp.WebAgent.RateLimitMode.None">
            <summary>
            Does not restrict request rate. ***NOT RECOMMENDED***
            </summary>
        </member>
        <member name="P:RedditSharp.WebAgent.RootDomain">
            <summary>
            The root domain RedditSharp uses to address Reddit.
            www.reddit.com by default
            </summary>
        </member>
        <member name="P:RedditSharp.WebAgent.AccessToken">
            <summary>
            Used to make calls against Reddit's API using OAuth23
            </summary>
        </member>
        <member name="M:RedditSharp.WebAgent.ExecuteRequest(System.Net.HttpWebRequest)">
            <summary>
            Executes the web request and handles errors in the response
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
    </members>
</doc>
